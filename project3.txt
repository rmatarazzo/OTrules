Data Science & Analytics Project Definition (Template):

Updated: 2024.05.17

Project Name: "OT Rules"


Project and Work Product Description:  (should be 1 CONCISE paragraph, 3-7 sentences)
		Retrieve and display current overtime rules for football, basketball, hockey, and baseball across men's and women's college and professional leagues. Differentiate between preseason, regular season, and playoff overtime rules, and provide timeout and challenge details if relevant. Present all information, including an overtime countdown clock, on a web page dashboard.
		
	• Answer "This project / work product (solution) fills these gaps... 
		This project fills these gaps by providing a comprehensive solution for retrieving and displaying current overtime rules across various sports, including football, basketball, hockey, and baseball, in both men's and women's college and professional leagues. It addresses the need for easily accessible and differentiated rules for different game types (preseason, regular season, playoffs), along with timeout and challenge details, if applicable. Additionally, it offers the convenience of presenting all this information on a web page dashboard, complete with an overtime countdown clock.
		
	• Main goals and problem(s) it solves.
		The main goals of this project are to streamline the process of accessing and understanding overtime rules across different sports and leagues. It solves the problem of manual search and comparison by automating the retrieval and differentiation of rules. Furthermore, it enhances user experience by presenting the information in a clear and organized manner on a web page dashboard, facilitating quick reference and decision-making during games.
	
	• Problem and Solution Workflow Diagrams (2 flowcharts "AS-IS" and "TO-BE")

		AS-IS Workflow Diagram (Textual Representation):
		AS-IS Steps:
		1. Manual Search: Users manually search for overtime rules online or in rulebooks.
			Action 1: Open search engine or rulebook.
			Action 2: Search for specific sport and league overtime rules.
		2. Data Gathering: Users gather information from various sources.
			Action 1: Visit multiple websites or pages in rulebooks.
			Action 2: Collect and note down relevant information.
		3. Manual Comparison: Users manually compare rules across different sources.
			Action 1: Identify differences in rules for preseason, regular season, and playoffs.
			Action 2: Note variations in rules for men’s and women’s leagues.
		4.Manual Differentiation: Users differentiate rules for various game types.
			Action 1: Separate rules for preseason, regular season, and playoffs.
			Action 2: Highlight specific rules for timeouts and challenges.
		5. Manual Presentation: Users manually compile information.
			Action 1: Create a document or presentation with gathered data.
			Action 2: Manually set up any visual aids like countdown clocks.

		TO-BE Workflow Diagram (Textual Representation):
		flowchart TD
    		TO-BE Steps:
		1. User Input Collection: The system collects user preferences.
			Action 1: User selects sport, league, and game type on the web interface.
			Action 2: User submits their preferences.
		2. Database Query: The system queries the database for relevant overtime rules.
			Action 1: Fetch rules based on user input.
			Action 2: Retrieve details for men’s and women’s leagues.
		3. Data Differentiation: The system formats rules for different game types.
			Action 1: Differentiate rules for preseason, regular season, and playoffs.
			Action 2: Structure rules for clear display.
		4. Timeouts and Challenges Extraction: The system extracts relevant information.
			Action 1: Identify timeouts and challenges.
			Action 2: Format this information for display.
		5. Countdown Clock Setup: The system initializes a countdown clock.
			Action 1: Determine the duration of the overtime period.
			Action 2: Set up and display the countdown clock.
		6. Web Page Display: The system displays all information on the web dashboard.
			Action 1: Present rules, timeouts, and challenges.
			Action 2: Display the countdown clock on the dashboard.


    "A problem clearly stated is a problem half-solved." - Dorothea Brande :
	


Description of Solution:  (should be CONCISE, 3-7 sentences)

	The solution retrieves and displays current overtime rules for football, basketball, hockey, and baseball across men's and women's college and professional leagues. It automates the process by querying a database based on user input, differentiating rules for preseason, regular season, and playoffs, and extracting details on timeouts and challenges. All information, including an overtime countdown clock, is presented clearly on a web page dashboard, providing a streamlined and user-friendly experience for quick reference and decision-making during games.

	• Software functions for solving problem(s) step by step.
	
		1. User Input Collection
			Function Name: get_user_input()
			Purpose: Collect user preferences for sport, league, and game type.
			Details: This function prompts the user to select a sport (football, basketball, hockey, or baseball), a league (college or professional), and a game type (preseason, regular season, or playoffs). It then returns the collected inputs for further processing.

		2. Database Query
			Function Name: query_overtime_rules(sport, league, game_type)
			Purpose: Retrieve overtime rules from the database based on user input.
			Details: This function connects to the database and constructs a query using the provided sport, league, and game type. It executes the query to fetch the relevant overtime rules and returns the results.
		
		3. Data Differentiation
			Function Name: differentiate_rules(rules)
			Purpose: Differentiate and format rules for preseason, regular season, and playoffs.
			Details: This function processes the retrieved rules to ensure they are clearly differentiated and formatted according to the game type (preseason, regular season, or playoffs). It returns the formatted rules.

		4. Timeouts and Challenges Extraction
			Function Name: get_timeouts_and_challenges(rules)
			Purpose: Extract information about timeouts and challenges, if applicable.
			Details: This function parses the differentiated rules to extract specific details about timeouts and challenges that may apply during the overtime period. It returns the extracted information.

		5. Countdown Clock Setup
			Function Name: setup_countdown_clock(overtime_duration)
			Purpose: Initialize a countdown clock for the overtime period.
			Details: This function sets up a countdown timer based on the provided overtime duration. It initializes and configures the countdown clock, returning it for display on the web interface.

		6. Web Page Display
			Function Name: display_on_web_page(rules, timeouts, challenges, countdown_clock)
			Purpose: Display the retrieved and formatted information on a web page.
			Details: This function renders the differentiated rules, timeouts, and challenges information on the web page. Additionally, it displays the initialized countdown clock, ensuring all information is presented clearly and comprehensively on the web dashboard.

	• "Minimum Viable Product" (MVP) 1.0 delivered.  (V1.x delivered beyond MVP V1.0?)
	• Later MVP, i.e., v2, v3, vN+ functionality to be delivered? 
    • Additional requirements, Graphical User Interfaces (GUI), usability, etc. for later versions
    
Solution Design (high-level):
	Solution Design (High-Level)
This low-level design ensures a clear and maintainable code structure, facilitating efficient development and easy future enhancements.




Main Execution:
	

Process: Orchestrates the flow of the program by calling the functions in sequence, handling user interactions, and displaying results.
	• Hyperlinks to actual complete code  

Actual Working Product Code: 
    Functions, modules, packages, documentation 
    
Application Instructions:

    • Step-by-step instructions for OTHERS:
        Instructions to install, set-up, and use your software:
        Everything needed to get your solution working.   
            Software packages and tools
            Configuration, data sets, URLs, input and output folder structure, etc. 
        
    • Additional Important Guidelines for Product Usability (for others to use your work products:



